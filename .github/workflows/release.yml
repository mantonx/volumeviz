name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: |
        go mod download
        cd frontend && npm ci

    - name: Run tests
      run: |
        go test -v -cover ./pkg/... ./internal/...
        cd frontend && npm test -- --run

    - name: Build binaries
      run: |
        mkdir -p dist
        # Build for multiple platforms
        GOOS=linux GOARCH=amd64 go build -o dist/volumeviz-linux-amd64 ./cmd/server
        GOOS=linux GOARCH=arm64 go build -o dist/volumeviz-linux-arm64 ./cmd/server
        GOOS=darwin GOARCH=amd64 go build -o dist/volumeviz-darwin-amd64 ./cmd/server
        GOOS=darwin GOARCH=arm64 go build -o dist/volumeviz-darwin-arm64 ./cmd/server
        GOOS=windows GOARCH=amd64 go build -o dist/volumeviz-windows-amd64.exe ./cmd/server

    - name: Build frontend
      run: |
        cd frontend && npm run build
        cd .. && tar -czf dist/volumeviz-frontend.tar.gz -C frontend/dist .

    - name: Generate changelog
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v5
      with:
        configuration: |
          {
            "categories": [
              {
                "title": "## üöÄ Features",
                "labels": ["feature", "enhancement"]
              },
              {
                "title": "## üêõ Bug Fixes",
                "labels": ["fix", "bugfix"]
              },
              {
                "title": "## üìñ Documentation",
                "labels": ["documentation"]
              },
              {
                "title": "## üß∞ Maintenance",
                "labels": ["chore", "maintenance"]
              }
            ]
          }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        body: ${{ steps.changelog.outputs.changelog }}
        files: |
          dist/volumeviz-linux-amd64
          dist/volumeviz-linux-arm64
          dist/volumeviz-darwin-amd64
          dist/volumeviz-darwin-arm64
          dist/volumeviz-windows-amd64.exe
          dist/volumeviz-frontend.tar.gz
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update Docker Hub Description
      uses: peter-evans/dockerhub-description@v4
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ secrets.DOCKER_USERNAME }}/volumeviz
        readme-filepath: ./README.md