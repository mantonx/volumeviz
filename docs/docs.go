// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/mantonx/volumeviz",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/mantonx/volumeviz/issues",
            "email": "support@volumeviz.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/mantonx/volumeviz/blob/main/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health/docker": {
            "get": {
                "description": "Get Docker daemon connection status and version information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Check Docker health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mantonx_volumeviz_internal_models.DockerHealth"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/github_com_mantonx_volumeviz_internal_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/volumes": {
            "get": {
                "description": "Get a list of all Docker volumes with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volumes"
                ],
                "summary": "List Docker volumes",
                "parameters": [
                    {
                        "type": "string",
                        "example": "local",
                        "description": "Filter by driver type",
                        "name": "driver",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by label key",
                        "name": "label_key",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by label value",
                        "name": "label_value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/volumes/{id}": {
            "get": {
                "description": "Get detailed information about a specific Docker volume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volumes"
                ],
                "summary": "Get volume details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Volume ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/volumes/{id}/size": {
            "get": {
                "description": "Get the current size and statistics of a Docker volume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scan"
                ],
                "summary": "Get volume size",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Volume ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScanResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/volumes/{id}/size/refresh": {
            "post": {
                "description": "Clear cache and recalculate volume size, optionally async",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scan"
                ],
                "summary": "Refresh volume size",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Volume ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Refresh options",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sync scan completed",
                        "schema": {
                            "$ref": "#/definitions/ScanResponse"
                        }
                    },
                    "202": {
                        "description": "Async scan started",
                        "schema": {
                            "$ref": "#/definitions/AsyncScanResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "AsyncScanResponse": {
            "type": "object",
            "properties": {
                "scan_id": {
                    "type": "string",
                    "example": "scan_tv-shows-readonly_1640995200"
                },
                "status": {
                    "type": "string",
                    "example": "started"
                },
                "volume_id": {
                    "type": "string",
                    "example": "tv-shows-readonly"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "VOLUME_NOT_FOUND"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "error": {
                    "type": "string",
                    "example": "Volume not found"
                }
            }
        },
        "RefreshRequest": {
            "type": "object",
            "properties": {
                "async": {
                    "type": "boolean",
                    "example": false
                },
                "method": {
                    "type": "string",
                    "example": "du"
                }
            }
        },
        "ScanResponse": {
            "type": "object",
            "properties": {
                "cached": {
                    "type": "boolean",
                    "example": false
                },
                "result": {
                    "$ref": "#/definitions/ScanResult"
                },
                "volume_id": {
                    "type": "string",
                    "example": "tv-shows-readonly"
                }
            }
        },
        "ScanResult": {
            "type": "object",
            "properties": {
                "cache_hit": {
                    "type": "boolean",
                    "example": false
                },
                "directory_count": {
                    "type": "integer",
                    "example": 1204
                },
                "duration": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/time.Duration"
                        }
                    ],
                    "example": 13248000000
                },
                "file_count": {
                    "type": "integer",
                    "example": 12543
                },
                "filesystem_type": {
                    "type": "string",
                    "example": "cifs"
                },
                "largest_file": {
                    "type": "integer",
                    "example": 8589934592
                },
                "method": {
                    "type": "string",
                    "example": "du"
                },
                "scanned_at": {
                    "type": "string"
                },
                "total_size": {
                    "type": "integer",
                    "example": 70640394854400
                },
                "volume_id": {
                    "type": "string",
                    "example": "tv-shows-readonly"
                }
            }
        },
        "VolumeListResponse": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer",
                    "example": 1
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VolumeResponse"
                    }
                }
            }
        },
        "VolumeResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "driver": {
                    "type": "string",
                    "example": "local"
                },
                "id": {
                    "type": "string",
                    "example": "tv-shows-readonly"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "mountpoint": {
                    "type": "string",
                    "example": "/var/lib/docker/volumes/tv-shows-readonly/_data"
                },
                "name": {
                    "type": "string",
                    "example": "tv-shows-readonly"
                },
                "options": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_mantonx_volumeviz_internal_models.DockerHealth": {
            "type": "object",
            "properties": {
                "api_version": {
                    "type": "string"
                },
                "build_time": {
                    "type": "string"
                },
                "git_commit": {
                    "type": "string"
                },
                "go_version": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "github_com_mantonx_volumeviz_internal_models.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "format": "int64",
            "enum": [
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        }
    },
    "tags": [
        {
            "description": "Docker volume operations",
            "name": "volumes"
        },
        {
            "description": "Health check endpoints",
            "name": "health"
        },
        {
            "description": "System information endpoints",
            "name": "system"
        },
        {
            "description": "Volume scanning operations",
            "name": "scan"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "VolumeViz API",
	Description:      "Docker volume monitoring and visualization API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
