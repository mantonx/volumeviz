# VolumeViz Environment Configuration
# Copy this file to .env for local development

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# Port for the API server
API_PORT=8080
SERVER_PORT=8080

# Host for the API server to bind to
SERVER_HOST=0.0.0.0

# Gin framework mode (debug, release, test)
GIN_MODE=release

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================
# Port for the frontend development server
FRONTEND_PORT=3000

# API URL that the frontend should connect to
VITE_API_URL=http://localhost:8080/api/v1

# WebSocket URL for real-time features (future use)
VITE_WS_URL=ws://localhost:8080/api/v1/ws

# Frontend feature flags
VITE_ENABLE_WEBSOCKET=false
VITE_ENABLE_POLLING=true
VITE_POLLING_INTERVAL=30000
VITE_MAX_CONCURRENT_SCANS=3
VITE_ENABLE_DEBUG=false

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================
# Docker daemon socket or TCP connection
# Local socket (default): unix:///var/run/docker.sock
# Remote TCP (dev only): tcp://host:2375
DOCKER_HOST=unix:///var/run/docker.sock

# Docker API timeout in seconds
DOCKER_TIMEOUT=30s

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Database type: postgres or sqlite
DB_TYPE=postgres

# PostgreSQL Configuration
DB_HOST=postgres
DB_PORT=5432
DB_USER=volumeviz
DB_PASSWORD=volumeviz
DB_NAME=volumeviz
DB_SSLMODE=disable

# SQLite Configuration (alternative to PostgreSQL)
# DB_TYPE=sqlite
# DB_PATH=./volumeviz.db

# =============================================================================
# SECURITY & CORS
# =============================================================================
# Allowed origins for CORS (comma-separated)
ALLOW_ORIGINS=http://localhost:3000,http://localhost:5173

# =============================================================================
# LOGGING & MONITORING
# =============================================================================
# Log level (debug, info, warn, error)
LOG_LEVEL=info

# Log format (json, text)
LOG_FORMAT=json

# Enable Prometheus metrics endpoint
ENABLE_METRICS=true

# Prometheus metrics server port
METRICS_PORT=9090

# =============================================================================
# DEVELOPMENT ONLY
# =============================================================================
# Enable development features (should be false in production)
DEV_MODE=true

# Enable API documentation endpoints
ENABLE_API_DOCS=true

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Authentication (disabled by default for development)
AUTH_ENABLED=false
# AUTH_HS256_SECRET=your-super-secret-jwt-key-at-least-32-characters

# Security Headers
SECURITY_HIDE_SERVER=true
SECURITY_ENABLE_HSTS=false
SECURITY_HSTS_MAX_AGE=31536000
SECURITY_CONTENT_TYPE_OPTIONS=nosniff
SECURITY_FRAME_OPTIONS=SAMEORIGIN
SECURITY_REFERRER_POLICY=no-referrer
SECURITY_CSP=default-src 'none'; frame-ancestors 'self';

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_RPM=60
RATE_LIMIT_BURST=30

# =============================================================================
# TLS/HTTPS CONFIGURATION
# =============================================================================
# Leave empty for HTTP mode (development)
# Set both for HTTPS mode (production)
TLS_CERT_FILE=
TLS_KEY_FILE=

# Example for Let's Encrypt certificates:
# TLS_CERT_FILE=/etc/letsencrypt/live/your-domain.com/fullchain.pem
# TLS_KEY_FILE=/etc/letsencrypt/live/your-domain.com/privkey.pem